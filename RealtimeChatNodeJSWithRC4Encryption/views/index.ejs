<!DOCTYPE html>
<html>
  <head>
    <title>Simple Group Chat on Node.js</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font: 13px Helvetica, Arial; }
        form { background: #fff; padding: 3px; position: fixed; bottom: 0; width: 100%; border-color: #000; border-top-style: solid; border-top-width: 1px;}
        form input { border-style: solid; border-width: 1px; padding: 10px; width: 85%; margin-right: .5%; }
        form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; margin-left: 2%; }
        #messages { list-style-type: none; margin: 0; padding: 0; }
        #messages li { padding: 5px 10px; }
        #messages li:nth-child(odd) { background: #eee; }
    </style>
    <script src="../../socket.io/socket.io.js"></script>
    <script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
  </head>
  <body>
    <ul id="messages"></ul>
    <form action="/" method="POST" id="chatForm">
      <input id="txt" autocomplete="off" autofocus="on" oninput="isTyping()" placeholder="type your message here..." /><button>Send</button>
    </form>
    <script>
            var socket = io.connect('192.168.43.26:8000');
            // submit text message without reload/refresh the page
            $('form').submit(function(e){
                e.preventDefault();
                var message = $('#txt').val();
                var kunci = 'kunci';
                var messagesend = rc4(kunci, message);
                var enc = window.btoa(messagesend);
                var dec = window.atob(enc); 
                socket.emit('chat_message', dec);
                var startTime = Date.now();
                socket.emit('enkripsi', enc, startTime);
                $('#txt').val('');
                return false;
            });

            // append the chat text message
            socket.on('chat_message', function(user, msg){
                // var time;
                // var date = Date(time);
                var messagereceive = rc4('kunci', msg); 
                $('#messages').append($('<li>').html('<strong>' + user + '</strong>' + ' : ' + messagereceive));
                  
                // socket.emit('endtime', time);
                            
            });
            // append text if someone is online
            socket.on('is_online', function(username) {
                $('#messages').append($('<li>').html(username));
            });

            // ask username
            var username = prompt('Please tell me your name');
            socket.emit('username', username);

            function rc4(key, str) {
                  var s = [], j = 0, x, res = '';
                  for (var i = 0; i < 256; i++) {
                    s[i] = i;
                  }
                  for (i = 0; i < 256; i++) {
                    j = (j + s[i] + key.charCodeAt(i % key.length)) % 256;
                    x = s[i];
                    s[i] = s[j];
                    s[j] = x;
                  }
                  i = 0;
                  j = 0;
                  for (var y = 0; y < str.length; y++) {
                    i = (i + 1) % 256;
                    j = (j + s[i]) % 256;
                    x = s[i];
                    s[i] = s[j];
                    s[j] = x;
                    res += String.fromCharCode(str.charCodeAt(y) ^ s[(s[i] + s[j]) % 256]);
                  }
                  return res;
                }
    </script>
</body>
</html>